{
  "contractName": "Freelancer",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "freelancer",
          "type": "address"
        }
      ],
      "name": "workAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "workApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "workFunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "client",
          "type": "address"
        }
      ],
      "name": "workProposed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "workStarted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "client",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freelancer",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "proposeWork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptWork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundWork",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startWork",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "approveWork",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"freelancer\",\"type\":\"address\"}],\"name\":\"workAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"workApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"workFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"}],\"name\":\"workProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"workStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptWork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveWork\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"client\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freelancer\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundWork\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"proposeWork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startWork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/alexyen/crypto/contractor-crypto/contracts/Freelancer.sol\":\"Freelancer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/alexyen/crypto/contractor-crypto/contracts/Freelancer.sol\":{\"keccak256\":\"0x6600955e9476f0dc449e156ff9fa9fdb65807661bf53385a386f954a74f51291\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://06325460c1efaf43cecd7576ef509ef4900c4c35817fd15efbd7886e44151127\",\"dweb:/ipfs/QmT5sch8yfC7aBC4P1BriP359BqPrhUo7aHV31YA5cGxAx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610d67806100206000396000f3fe6080604052600436106100705760003560e01c80634848fb861161004e5780634848fb86146100ce578063a37dda2c146100d8578063d69c136114610103578063ddb3a5321461012c57610070565b806301034979146100755780630b832cb21461008c578063109e94cf146100a3575b600080fd5b34801561008157600080fd5b5061008a610136565b005b34801561009857600080fd5b506100a16102a3565b005b3480156100af57600080fd5b506100b861042a565b6040516100c59190610b45565b60405180910390f35b6100d6610450565b005b3480156100e457600080fd5b506100ed6105d9565b6040516100fa9190610b7b565b60405180910390f35b34801561010f57600080fd5b5061012a60048036038101906101259190610ac4565b6105ff565b005b6101346107cc565b005b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461019057600080fd5b60028060048111156101cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060020160009054906101000a900460ff166004811115610216577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461022057600080fd5b6003600060020160006101000a81548160ff0219169083600481111561026f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f79a9e345927c44cdbf651a935c4b402f1ea04e002051345c271b98d41d5ffd1160405160405180910390a150565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102fd57600080fd5b6000806004811115610338577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060020160009054906101000a900460ff166004811115610383577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461038d57600080fd5b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc978404f2e2bb3c1aa7b249be90d74fa69a7f4571ccabb91ea3f93cb38fe621b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161041f9190610b60565b60405180910390a150565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600180600481111561048b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060020160009054906101000a900460ff1660048111156104d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146104e057600080fd5b600060010154348181146104f357600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461054d57600080fd5b6002600060020160006101000a81548160ff0219169083600481111561059c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550346003819055507fca910ec4c9d6940748b3651002013a7e9eb151c53ce260d46aaf2df6ab81e18c60405160405180910390a1505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065957600080fd5b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060600160405280838152602001828152602001600060048111156106eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525060008082015181600001908051906020019061070b9291906109a4565b506020820151816001015560408201518160020160006101000a81548160ff02191690836004811115610767577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055509050507ff2de3d92c60562e74cfd222b38acf4cbeecfd6c8fe8f997ae24f142dedde1ac0600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516107c09190610b45565b60405180910390a15050565b6003806004811115610807577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060020160009054906101000a900460ff166004811115610852577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461085c57600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108b657600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f19350505050158015610920573d6000803e3d6000fd5b506004600060020160006101000a81548160ff02191690836004811115610970577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f2ea2a895310fca619f19b2d0c265483ea15808ad7ce8263f6334d9b845a46fea60405160405180910390a150565b8280546109b090610c8a565b90600052602060002090601f0160209004810192826109d25760008555610a19565b82601f106109eb57805160ff1916838001178555610a19565b82800160010185558215610a19579182015b82811115610a185782518255916020019190600101906109fd565b5b509050610a269190610a2a565b5090565b5b80821115610a43576000816000905550600101610a2b565b5090565b6000610a5a610a5584610bc7565b610b96565b905082815260208101848484011115610a7257600080fd5b610a7d848285610c7b565b509392505050565b600082601f830112610a9657600080fd5b8135610aa6848260208601610a47565b91505092915050565b600081359050610abe81610d1a565b92915050565b60008060408385031215610ad757600080fd5b600083013567ffffffffffffffff811115610af157600080fd5b610afd85828601610a85565b9250506020610b0e85828601610aaf565b9150509250929050565b610b2181610c45565b82525050565b610b3081610c09565b82525050565b610b3f81610bf7565b82525050565b6000602082019050610b5a6000830184610b36565b92915050565b6000602082019050610b756000830184610b18565b92915050565b6000602082019050610b906000830184610b27565b92915050565b6000604051905081810181811067ffffffffffffffff82111715610bbd57610bbc610ceb565b5b8060405250919050565b600067ffffffffffffffff821115610be257610be1610ceb565b5b601f19601f8301169050602081019050919050565b6000610c0282610c1b565b9050919050565b6000610c1482610c1b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c5082610c57565b9050919050565b6000610c6282610c69565b9050919050565b6000610c7482610c1b565b9050919050565b82818337600083830152505050565b60006002820490506001821680610ca257607f821691505b60208210811415610cb657610cb5610cbc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d2381610c3b565b8114610d2e57600080fd5b5056fea26469706673582212209ab0b5598efa71725c5b73f674e3fc0f7ab62d956ac0ce64cf7a66abecf6a57264736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c80634848fb861161004e5780634848fb86146100ce578063a37dda2c146100d8578063d69c136114610103578063ddb3a5321461012c57610070565b806301034979146100755780630b832cb21461008c578063109e94cf146100a3575b600080fd5b34801561008157600080fd5b5061008a610136565b005b34801561009857600080fd5b506100a16102a3565b005b3480156100af57600080fd5b506100b861042a565b6040516100c59190610b45565b60405180910390f35b6100d6610450565b005b3480156100e457600080fd5b506100ed6105d9565b6040516100fa9190610b7b565b60405180910390f35b34801561010f57600080fd5b5061012a60048036038101906101259190610ac4565b6105ff565b005b6101346107cc565b005b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461019057600080fd5b60028060048111156101cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060020160009054906101000a900460ff166004811115610216577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461022057600080fd5b6003600060020160006101000a81548160ff0219169083600481111561026f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f79a9e345927c44cdbf651a935c4b402f1ea04e002051345c271b98d41d5ffd1160405160405180910390a150565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102fd57600080fd5b6000806004811115610338577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060020160009054906101000a900460ff166004811115610383577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461038d57600080fd5b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fc978404f2e2bb3c1aa7b249be90d74fa69a7f4571ccabb91ea3f93cb38fe621b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161041f9190610b60565b60405180910390a150565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600180600481111561048b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060020160009054906101000a900460ff1660048111156104d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146104e057600080fd5b600060010154348181146104f357600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461054d57600080fd5b6002600060020160006101000a81548160ff0219169083600481111561059c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550346003819055507fca910ec4c9d6940748b3651002013a7e9eb151c53ce260d46aaf2df6ab81e18c60405160405180910390a1505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065957600080fd5b33600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060600160405280838152602001828152602001600060048111156106eb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81525060008082015181600001908051906020019061070b9291906109a4565b506020820151816001015560408201518160020160006101000a81548160ff02191690836004811115610767577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055509050507ff2de3d92c60562e74cfd222b38acf4cbeecfd6c8fe8f997ae24f142dedde1ac0600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516107c09190610b45565b60405180910390a15050565b6003806004811115610807577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060020160009054906101000a900460ff166004811115610852577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461085c57600080fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108b657600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f19350505050158015610920573d6000803e3d6000fd5b506004600060020160006101000a81548160ff02191690836004811115610970577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055507f2ea2a895310fca619f19b2d0c265483ea15808ad7ce8263f6334d9b845a46fea60405160405180910390a150565b8280546109b090610c8a565b90600052602060002090601f0160209004810192826109d25760008555610a19565b82601f106109eb57805160ff1916838001178555610a19565b82800160010185558215610a19579182015b82811115610a185782518255916020019190600101906109fd565b5b509050610a269190610a2a565b5090565b5b80821115610a43576000816000905550600101610a2b565b5090565b6000610a5a610a5584610bc7565b610b96565b905082815260208101848484011115610a7257600080fd5b610a7d848285610c7b565b509392505050565b600082601f830112610a9657600080fd5b8135610aa6848260208601610a47565b91505092915050565b600081359050610abe81610d1a565b92915050565b60008060408385031215610ad757600080fd5b600083013567ffffffffffffffff811115610af157600080fd5b610afd85828601610a85565b9250506020610b0e85828601610aaf565b9150509250929050565b610b2181610c45565b82525050565b610b3081610c09565b82525050565b610b3f81610bf7565b82525050565b6000602082019050610b5a6000830184610b36565b92915050565b6000602082019050610b756000830184610b18565b92915050565b6000602082019050610b906000830184610b27565b92915050565b6000604051905081810181811067ffffffffffffffff82111715610bbd57610bbc610ceb565b5b8060405250919050565b600067ffffffffffffffff821115610be257610be1610ceb565b5b601f19601f8301169050602081019050919050565b6000610c0282610c1b565b9050919050565b6000610c1482610c1b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c5082610c57565b9050919050565b6000610c6282610c69565b9050919050565b6000610c7482610c1b565b9050919050565b82818337600083830152505050565b60006002820490506001821680610ca257607f821691505b60208210811415610cb657610cb5610cbc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d2381610c3b565b8114610d2e57600080fd5b5056fea26469706673582212209ab0b5598efa71725c5b73f674e3fc0f7ab62d956ac0ce64cf7a66abecf6a57264736f6c63430008000033",
  "immutableReferences": {},
  "sourceMap": "69:2919:0:-:0;;;1371:16;;;;;;;;;;69:2919;;;;;;",
  "deployedSourceMap": "69:2919:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:173;;;;;;;;;;;;;:::i;:::-;;2109:194;;;;;;;;;;;;;:::i;:::-;;1015:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2309:262;;;:::i;:::-;;976:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1871:232;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2756:230;;;:::i;:::-;;2577:173;1540:6;;;;;;;;;;;1526:20;;:10;:20;;;1518:29;;;;;;2658:13:::1;1645:7;1630:22;;;;;;;;;;;;;;;;:4;:11;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1622:31;;;::::0;::::1;;2701:14:::2;2687:4;:11;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2730:13;;;;;;;;;;1557:1:::1;2577:173::o:0;2109:194::-;1451:10;;;;;;;;;;;1437:24;;:10;:24;;;1429:33;;;;;;2194:15:::1;1645:7;1630:22;;;;;;;;;;;;;;;;:4;:11;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1622:31;;;::::0;::::1;;2246:10:::2;2225;;:32;;;;;;;;;;;;;;;;;;2272:24;2285:10;;;;;;;;;;;2272:24;;;;;;:::i;:::-;;;;;;;;1472:1:::1;2109:194::o:0;1015:21::-;;;;;;;;;;;;;:::o;2309:262::-;2385:15;1645:7;1630:22;;;;;;;;;;;;;;;;:4;:11;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1622:31;;;;;;2426:4:::1;:10;;;2438:9;1840:6;1828:8;:18;1820:27;;;::::0;::::1;;1540:6:::2;;;;;;;;;;;1526:20;;:10;:20;;;1518:29;;;::::0;::::2;;2496:13:::3;2482:4;:11;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2528:9;2519:6;:18;;;;2552:12;;;;;;;;;;1663:1:::1;;2309:262:::0;:::o;976:33::-;;;;;;;;;;;;;:::o;1871:232::-;1540:6;;;;;;;;;;;1526:20;;:10;:20;;;1518:29;;;;;;1991:10:::1;1982:6;;:19;;;;;;;;;;;;;;;;;;2018:43;;;;;;;;2023:12;2018:43;;;;2037:6;2018:43;;;;2045:15;2018:43;;;;;;;;;;;;;;;;;;::::0;2011:4:::1;:50:::0;::::1;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2076:20;2089:6;;;;;;;;;;;2076:20;;;;;;:::i;:::-;;;;;;;;1871:232:::0;;:::o;2756:230::-;2835:14;1645:7;1630:22;;;;;;;;;;;;;;;;:4;:11;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;1622:31;;;;;;1540:6:::1;;;;;;;;;;;1526:20;;:10;:20;;;1518:29;;;::::0;::::1;;2884:10:::2;;;;;;;;;;;:19;;:27;2904:6;;2884:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;2935:15;2921:4;:11;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2965:14;;;;;;;;;;2756:230:::0;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:344:2:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;371:273::-;;476:3;469:4;461:6;457:17;453:27;443:2;;494:1;491;484:12;443:2;534:6;521:20;559:79;634:3;626:6;619:4;611:6;607:17;559:79;:::i;:::-;550:88;;433:211;;;;;:::o;650:139::-;;734:6;721:20;712:29;;750:33;777:5;750:33;:::i;:::-;702:87;;;;:::o;795:520::-;;;930:2;918:9;909:7;905:23;901:32;898:2;;;946:1;943;936:12;898:2;1017:1;1006:9;1002:17;989:31;1047:18;1039:6;1036:30;1033:2;;;1079:1;1076;1069:12;1033:2;1107:63;1162:7;1153:6;1142:9;1138:22;1107:63;:::i;:::-;1097:73;;960:220;1219:2;1245:53;1290:7;1281:6;1270:9;1266:22;1245:53;:::i;:::-;1235:63;;1190:118;888:427;;;;;:::o;1321:147::-;1416:45;1455:5;1416:45;:::i;:::-;1411:3;1404:58;1394:74;;:::o;1474:142::-;1577:32;1603:5;1577:32;:::i;:::-;1572:3;1565:45;1555:61;;:::o;1622:118::-;1709:24;1727:5;1709:24;:::i;:::-;1704:3;1697:37;1687:53;;:::o;1746:222::-;;1877:2;1866:9;1862:18;1854:26;;1890:71;1958:1;1947:9;1943:17;1934:6;1890:71;:::i;:::-;1844:124;;;;:::o;1974:238::-;;2113:2;2102:9;2098:18;2090:26;;2126:79;2202:1;2191:9;2187:17;2178:6;2126:79;:::i;:::-;2080:132;;;;:::o;2218:254::-;;2365:2;2354:9;2350:18;2342:26;;2378:87;2462:1;2451:9;2447:17;2438:6;2378:87;:::i;:::-;2332:140;;;;:::o;2478:283::-;;2544:2;2538:9;2528:19;;2586:4;2578:6;2574:17;2693:6;2681:10;2678:22;2657:18;2645:10;2642:34;2639:62;2636:2;;;2704:18;;:::i;:::-;2636:2;2744:10;2740:2;2733:22;2518:243;;;;:::o;2767:332::-;;2919:18;2911:6;2908:30;2905:2;;;2941:18;;:::i;:::-;2905:2;3026:4;3022:9;3015:4;3007:6;3003:17;2999:33;2991:41;;3087:4;3081;3077:15;3069:23;;2834:265;;;:::o;3105:96::-;;3171:24;3189:5;3171:24;:::i;:::-;3160:35;;3150:51;;;:::o;3207:104::-;;3281:24;3299:5;3281:24;:::i;:::-;3270:35;;3260:51;;;:::o;3317:126::-;;3394:42;3387:5;3383:54;3372:65;;3362:81;;;:::o;3449:77::-;;3515:5;3504:16;;3494:32;;;:::o;3532:134::-;;3623:37;3654:5;3623:37;:::i;:::-;3610:50;;3600:66;;;:::o;3672:126::-;;3755:37;3786:5;3755:37;:::i;:::-;3742:50;;3732:66;;;:::o;3804:113::-;;3887:24;3905:5;3887:24;:::i;:::-;3874:37;;3864:53;;;:::o;3923:154::-;4007:6;4002:3;3997;3984:30;4069:1;4060:6;4055:3;4051:16;4044:27;3974:103;;;:::o;4083:320::-;;4164:1;4158:4;4154:12;4144:22;;4211:1;4205:4;4201:12;4232:18;4222:2;;4288:4;4280:6;4276:17;4266:27;;4222:2;4350;4342:6;4339:14;4319:18;4316:38;4313:2;;;4369:18;;:::i;:::-;4313:2;4134:269;;;;:::o;4409:180::-;4457:77;4454:1;4447:88;4554:4;4551:1;4544:15;4578:4;4575:1;4568:15;4595:180;4643:77;4640:1;4633:88;4740:4;4737:1;4730:15;4764:4;4761:1;4754:15;4781:122;4854:24;4872:5;4854:24;:::i;:::-;4847:5;4844:35;4834:2;;4893:1;4890;4883:12;4834:2;4824:79;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.0 <0.9.0;\n\ncontract Freelancer {\n    /* \n    *   1. Clients browse freelancers and suggest work.\n    *   2. Freelancers accept work, and propose a plan of work.\n    *   3. Clients accept the plan of work, and fund the contract.\n    *   4. Freelancers start the work.\n    *   5. Clients approve the approved work.\n    *   6. Freelancers withdraw funds.\n    */\n    enum Status { proposal, accepted, funded, started, approved }\n\n    struct Work {\n        // client's description of work\n        string description;\n        // total payout for the work\n        uint256 value;\n        // status of the work\n        Status status;\n    }\n\n    // Those who know, know\n    Work work;\n\n    // holds funds until work is complete\n    uint256 escrow;\n\n    // \"payable\" vs. \"non-payable\" addresses are defined at in Solidity at compile time.\n    // You can use .transfer(...) and .send(...) on address payable, but not address.\n    address payable public freelancer;\n    address public client;\n\n    event workProposed(address client);\n    event workAccepted(address freelancer);\n    // TODO: We can use events and \"workStageIds\" to manage stage-based work plan + payout\n    event workFunded();\n    event workStarted();\n    event workApproved();\n\n    // TODO: May be useful to initialize some state with contract deployment\n    constructor() {}\n\n    modifier onlyFreelancer() {\n        require(msg.sender == freelancer);\n        _;\n    }\n\n    modifier onlyClient() {\n        require(msg.sender == client);\n        _;\n    }\n\n    modifier checkWorkStatus(Status _status) {\n        require(work.status == _status);\n        _;\n    }\n\n    // \"_\" differentiates between function arguments and global variables\n    modifier sufficientFunds(uint256 _value, uint256 _payment) {\n        require(_payment == _value);\n        _;\n    }\n\n    function proposeWork(string memory _description, uint _value) \n        public\n        onlyClient\n    {\n        client = msg.sender;\n        work = Work(_description, _value, Status.proposal);\n        emit workProposed(client);\n    }\n\n    function acceptWork() \n        public\n        onlyFreelancer\n        checkWorkStatus(Status.proposal)\n    {\n        freelancer = payable(msg.sender);\n        emit workAccepted(freelancer);\n    }\n\n    function fundWork() \n        public\n        payable\n        checkWorkStatus(Status.accepted)\n        sufficientFunds(work.value, msg.value)\n        onlyClient\n    {\n        work.status = Status.funded;\n        escrow = msg.value;\n        emit workFunded();\n    }\n\n    function startWork() \n        public\n        onlyClient \n        checkWorkStatus(Status.funded)\n    {\n        work.status = Status.started;\n        emit workStarted();\n    }\n\n    function approveWork() \n        public\n        payable\n        checkWorkStatus(Status.started)\n        onlyClient\n    {\n        freelancer.transfer(escrow);\n        work.status = Status.approved;\n        emit workApproved();\n    }\n}",
  "sourcePath": "/Users/alexyen/crypto/contractor-crypto/contracts/Freelancer.sol",
  "ast": {
    "absolutePath": "/Users/alexyen/crypto/contractor-crypto/contracts/Freelancer.sol",
    "exportedSymbols": {
      "Freelancer": [
        220
      ]
    },
    "id": 221,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 220,
        "linearizedBaseContracts": [
          220
        ],
        "name": "Freelancer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Freelancer.Status",
            "id": 7,
            "members": [
              {
                "id": 2,
                "name": "proposal",
                "nodeType": "EnumValue",
                "src": "435:8:0"
              },
              {
                "id": 3,
                "name": "accepted",
                "nodeType": "EnumValue",
                "src": "445:8:0"
              },
              {
                "id": 4,
                "name": "funded",
                "nodeType": "EnumValue",
                "src": "455:6:0"
              },
              {
                "id": 5,
                "name": "started",
                "nodeType": "EnumValue",
                "src": "463:7:0"
              },
              {
                "id": 6,
                "name": "approved",
                "nodeType": "EnumValue",
                "src": "472:8:0"
              }
            ],
            "name": "Status",
            "nodeType": "EnumDefinition",
            "src": "421:61:0"
          },
          {
            "canonicalName": "Freelancer.Work",
            "id": 15,
            "members": [
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "550:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 8,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "550:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "615:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "615:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "668:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Status_$7",
                  "typeString": "enum Freelancer.Status"
                },
                "typeName": {
                  "id": 13,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 12,
                    "name": "Status",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 7,
                    "src": "668:6:0"
                  },
                  "referencedDeclaration": 7,
                  "src": "668:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$7",
                    "typeString": "enum Freelancer.Status"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Work",
            "nodeType": "StructDefinition",
            "scope": 220,
            "src": "488:200:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 18,
            "mutability": "mutable",
            "name": "work",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "722:9:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Work_$15_storage",
              "typeString": "struct Freelancer.Work"
            },
            "typeName": {
              "id": 17,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 16,
                "name": "Work",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 15,
                "src": "722:4:0"
              },
              "referencedDeclaration": 15,
              "src": "722:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Work_$15_storage_ptr",
                "typeString": "struct Freelancer.Work"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 20,
            "mutability": "mutable",
            "name": "escrow",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "780:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "780:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "a37dda2c",
            "id": 22,
            "mutability": "mutable",
            "name": "freelancer",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "976:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 21,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "976:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "109e94cf",
            "id": 24,
            "mutability": "mutable",
            "name": "client",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "1015:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1015:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 28,
            "name": "workProposed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "client",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "1062:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1062:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1061:16:0"
            },
            "src": "1043:35:0"
          },
          {
            "anonymous": false,
            "id": 32,
            "name": "workAccepted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "freelancer",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "1102:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1101:20:0"
            },
            "src": "1083:39:0"
          },
          {
            "anonymous": false,
            "id": 34,
            "name": "workFunded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:2:0"
            },
            "src": "1218:19:0"
          },
          {
            "anonymous": false,
            "id": 36,
            "name": "workStarted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1259:2:0"
            },
            "src": "1242:20:0"
          },
          {
            "anonymous": false,
            "id": 38,
            "name": "workApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1285:2:0"
            },
            "src": "1267:21:0"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "1385:2:0",
              "statements": []
            },
            "id": 42,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1382:2:0"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1385:0:0"
            },
            "scope": 220,
            "src": "1371:16:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "1419:61:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1437:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1437:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 47,
                          "name": "freelancer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "1451:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1437:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 44,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1429:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:33:0"
                },
                {
                  "id": 51,
                  "nodeType": "PlaceholderStatement",
                  "src": "1472:1:0"
                }
              ]
            },
            "id": 53,
            "name": "onlyFreelancer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1416:2:0"
            },
            "src": "1393:87:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "1508:57:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 56,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1526:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1526:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 58,
                          "name": "client",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "1540:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1526:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 55,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1518:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1518:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:29:0"
                },
                {
                  "id": 62,
                  "nodeType": "PlaceholderStatement",
                  "src": "1557:1:0"
                }
              ]
            },
            "id": 64,
            "name": "onlyClient",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1505:2:0"
            },
            "src": "1486:79:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "1612:59:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$7",
                          "typeString": "enum Freelancer.Status"
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 70,
                            "name": "work",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1630:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Work_$15_storage",
                              "typeString": "struct Freelancer.Work storage ref"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "1630:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$7",
                            "typeString": "enum Freelancer.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 72,
                          "name": "_status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1645:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$7",
                            "typeString": "enum Freelancer.Status"
                          }
                        },
                        "src": "1630:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1622:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1622:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1622:31:0"
                },
                {
                  "id": 76,
                  "nodeType": "PlaceholderStatement",
                  "src": "1663:1:0"
                }
              ]
            },
            "id": 78,
            "name": "checkWorkStatus",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1596:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$7",
                    "typeString": "enum Freelancer.Status"
                  },
                  "typeName": {
                    "id": 66,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65,
                      "name": "Status",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7,
                      "src": "1596:6:0"
                    },
                    "referencedDeclaration": 7,
                    "src": "1596:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1595:16:0"
            },
            "src": "1571:100:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1810:55:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 85,
                          "name": "_payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "1828:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 86,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "1840:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1828:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1820:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1820:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1820:27:0"
                },
                {
                  "id": 90,
                  "nodeType": "PlaceholderStatement",
                  "src": "1857:1:0"
                }
              ]
            },
            "id": 92,
            "name": "sufficientFunds",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1776:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1776:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "_payment",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1792:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1792:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1775:34:0"
            },
            "src": "1751:114:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1972:131:0",
              "statements": [
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101,
                      "name": "client",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1982:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 102,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1991:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1991:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1982:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1982:19:0"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 106,
                      "name": "work",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2011:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Work_$15_storage",
                        "typeString": "struct Freelancer.Work storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 108,
                          "name": "_description",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "2023:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 109,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "2037:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 110,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2045:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                              "typeString": "type(enum Freelancer.Status)"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "src": "2045:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$7",
                            "typeString": "enum Freelancer.Status"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_Status_$7",
                            "typeString": "enum Freelancer.Status"
                          }
                        ],
                        "id": 107,
                        "name": "Work",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "2018:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Work_$15_storage_ptr_$",
                          "typeString": "type(struct Freelancer.Work storage pointer)"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2018:43:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Work_$15_memory_ptr",
                        "typeString": "struct Freelancer.Work memory"
                      }
                    },
                    "src": "2011:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Work_$15_storage",
                      "typeString": "struct Freelancer.Work storage ref"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "2011:50:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 116,
                        "name": "client",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "2089:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 115,
                      "name": "workProposed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "2076:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "EmitStatement",
                  "src": "2071:25:0"
                }
              ]
            },
            "functionSelector": "d69c1361",
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 99,
                "modifierName": {
                  "id": 98,
                  "name": "onlyClient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "1957:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1957:10:0"
              }
            ],
            "name": "proposeWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1892:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1920:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1920:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1891:41:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1972:0:0"
            },
            "scope": 220,
            "src": "1871:232:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "2215:88:0",
              "statements": [
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 129,
                      "name": "freelancer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2225:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 132,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2246:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2246:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2238:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2238:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2238:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2225:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "2225:32:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 138,
                        "name": "freelancer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2285:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 137,
                      "name": "workAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2272:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2272:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "EmitStatement",
                  "src": "2267:29:0"
                }
              ]
            },
            "functionSelector": "0b832cb2",
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 123,
                "modifierName": {
                  "id": 122,
                  "name": "onlyFreelancer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "2155:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2155:14:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 125,
                      "name": "Status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "2194:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                        "typeString": "type(enum Freelancer.Status)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "proposal",
                    "nodeType": "MemberAccess",
                    "src": "2194:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  }
                ],
                "id": 127,
                "modifierName": {
                  "id": 124,
                  "name": "checkWorkStatus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78,
                  "src": "2178:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2178:32:0"
              }
            ],
            "name": "acceptWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2128:2:0"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2215:0:0"
            },
            "scope": 220,
            "src": "2109:194:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "2472:99:0",
              "statements": [
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 157,
                        "name": "work",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2482:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Work_$15_storage",
                          "typeString": "struct Freelancer.Work storage ref"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "2482:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$7",
                        "typeString": "enum Freelancer.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 160,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2496:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                          "typeString": "type(enum Freelancer.Status)"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "funded",
                      "nodeType": "MemberAccess",
                      "src": "2496:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$7",
                        "typeString": "enum Freelancer.Status"
                      }
                    },
                    "src": "2482:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "2482:27:0"
                },
                {
                  "expression": {
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 164,
                      "name": "escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2519:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 165,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2528:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2528:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2519:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2519:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 169,
                      "name": "workFunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2552:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2552:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 171,
                  "nodeType": "EmitStatement",
                  "src": "2547:17:0"
                }
              ]
            },
            "functionSelector": "4848fb86",
            "id": 173,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 145,
                      "name": "Status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "2385:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                        "typeString": "type(enum Freelancer.Status)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "src": "2385:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  }
                ],
                "id": 147,
                "modifierName": {
                  "id": 144,
                  "name": "checkWorkStatus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78,
                  "src": "2369:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2369:32:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 149,
                      "name": "work",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2426:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Work_$15_storage",
                        "typeString": "struct Freelancer.Work storage ref"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11,
                    "src": "2426:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "expression": {
                      "id": 151,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "2438:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "2438:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 153,
                "modifierName": {
                  "id": 148,
                  "name": "sufficientFunds",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "2410:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2410:38:0"
              },
              {
                "id": 155,
                "modifierName": {
                  "id": 154,
                  "name": "onlyClient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "2457:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2457:10:0"
              }
            ],
            "name": "fundWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2326:2:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2472:0:0"
            },
            "scope": 220,
            "src": "2309:262:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "2677:73:0",
              "statements": [
                {
                  "expression": {
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 182,
                        "name": "work",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2687:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Work_$15_storage",
                          "typeString": "struct Freelancer.Work storage ref"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "2687:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$7",
                        "typeString": "enum Freelancer.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 185,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2701:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                          "typeString": "type(enum Freelancer.Status)"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "started",
                      "nodeType": "MemberAccess",
                      "src": "2701:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$7",
                        "typeString": "enum Freelancer.Status"
                      }
                    },
                    "src": "2687:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "2687:28:0"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 189,
                      "name": "workStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2730:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2730:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "EmitStatement",
                  "src": "2725:18:0"
                }
              ]
            },
            "functionSelector": "01034979",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 176,
                "modifierName": {
                  "id": 175,
                  "name": "onlyClient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "2622:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2622:10:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 178,
                      "name": "Status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "2658:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                        "typeString": "type(enum Freelancer.Status)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "funded",
                    "nodeType": "MemberAccess",
                    "src": "2658:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  }
                ],
                "id": 180,
                "modifierName": {
                  "id": 177,
                  "name": "checkWorkStatus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78,
                  "src": "2642:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2642:30:0"
              }
            ],
            "name": "startWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2595:2:0"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2677:0:0"
            },
            "scope": 220,
            "src": "2577:173:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "2874:112:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 205,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2904:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 202,
                        "name": "freelancer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2884:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2884:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2884:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2884:27:0"
                },
                {
                  "expression": {
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 208,
                        "name": "work",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2921:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Work_$15_storage",
                          "typeString": "struct Freelancer.Work storage ref"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "2921:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$7",
                        "typeString": "enum Freelancer.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 211,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2935:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                          "typeString": "type(enum Freelancer.Status)"
                        }
                      },
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "approved",
                      "nodeType": "MemberAccess",
                      "src": "2935:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$7",
                        "typeString": "enum Freelancer.Status"
                      }
                    },
                    "src": "2921:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "2921:29:0"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 215,
                      "name": "workApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "2965:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2965:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "EmitStatement",
                  "src": "2960:19:0"
                }
              ]
            },
            "functionSelector": "ddb3a532",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 196,
                      "name": "Status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "2835:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                        "typeString": "type(enum Freelancer.Status)"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "started",
                    "nodeType": "MemberAccess",
                    "src": "2835:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  }
                ],
                "id": 198,
                "modifierName": {
                  "id": 195,
                  "name": "checkWorkStatus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78,
                  "src": "2819:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2819:31:0"
              },
              {
                "id": 200,
                "modifierName": {
                  "id": 199,
                  "name": "onlyClient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "2859:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2859:10:0"
              }
            ],
            "name": "approveWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2776:2:0"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2874:0:0"
            },
            "scope": 220,
            "src": "2756:230:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 221,
        "src": "69:2919:0"
      }
    ],
    "src": "36:2952:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/alexyen/crypto/contractor-crypto/contracts/Freelancer.sol",
    "exportedSymbols": {
      "Freelancer": [
        220
      ]
    },
    "id": 221,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 220,
        "linearizedBaseContracts": [
          220
        ],
        "name": "Freelancer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Freelancer.Status",
            "id": 7,
            "members": [
              {
                "id": 2,
                "name": "proposal",
                "nodeType": "EnumValue",
                "src": "435:8:0"
              },
              {
                "id": 3,
                "name": "accepted",
                "nodeType": "EnumValue",
                "src": "445:8:0"
              },
              {
                "id": 4,
                "name": "funded",
                "nodeType": "EnumValue",
                "src": "455:6:0"
              },
              {
                "id": 5,
                "name": "started",
                "nodeType": "EnumValue",
                "src": "463:7:0"
              },
              {
                "id": 6,
                "name": "approved",
                "nodeType": "EnumValue",
                "src": "472:8:0"
              }
            ],
            "name": "Status",
            "nodeType": "EnumDefinition",
            "src": "421:61:0"
          },
          {
            "canonicalName": "Freelancer.Work",
            "id": 15,
            "members": [
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "550:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 8,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "550:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "615:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 10,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "615:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 15,
                "src": "668:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Status_$7",
                  "typeString": "enum Freelancer.Status"
                },
                "typeName": {
                  "id": 13,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 12,
                    "name": "Status",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 7,
                    "src": "668:6:0"
                  },
                  "referencedDeclaration": 7,
                  "src": "668:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$7",
                    "typeString": "enum Freelancer.Status"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Work",
            "nodeType": "StructDefinition",
            "scope": 220,
            "src": "488:200:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 18,
            "mutability": "mutable",
            "name": "work",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "722:9:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Work_$15_storage",
              "typeString": "struct Freelancer.Work"
            },
            "typeName": {
              "id": 17,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 16,
                "name": "Work",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 15,
                "src": "722:4:0"
              },
              "referencedDeclaration": 15,
              "src": "722:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Work_$15_storage_ptr",
                "typeString": "struct Freelancer.Work"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 20,
            "mutability": "mutable",
            "name": "escrow",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "780:14:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "780:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "a37dda2c",
            "id": 22,
            "mutability": "mutable",
            "name": "freelancer",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "976:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 21,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "976:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "109e94cf",
            "id": 24,
            "mutability": "mutable",
            "name": "client",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "1015:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1015:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 28,
            "name": "workProposed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "client",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "1062:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1062:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1061:16:0"
            },
            "src": "1043:35:0"
          },
          {
            "anonymous": false,
            "id": 32,
            "name": "workAccepted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "freelancer",
                  "nodeType": "VariableDeclaration",
                  "scope": 32,
                  "src": "1102:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1101:20:0"
            },
            "src": "1083:39:0"
          },
          {
            "anonymous": false,
            "id": 34,
            "name": "workFunded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:2:0"
            },
            "src": "1218:19:0"
          },
          {
            "anonymous": false,
            "id": 36,
            "name": "workStarted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1259:2:0"
            },
            "src": "1242:20:0"
          },
          {
            "anonymous": false,
            "id": 38,
            "name": "workApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1285:2:0"
            },
            "src": "1267:21:0"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "1385:2:0",
              "statements": []
            },
            "id": 42,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1382:2:0"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1385:0:0"
            },
            "scope": 220,
            "src": "1371:16:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "1419:61:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1437:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1437:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 47,
                          "name": "freelancer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "1451:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1437:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 44,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1429:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:33:0"
                },
                {
                  "id": 51,
                  "nodeType": "PlaceholderStatement",
                  "src": "1472:1:0"
                }
              ]
            },
            "id": 53,
            "name": "onlyFreelancer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1416:2:0"
            },
            "src": "1393:87:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "1508:57:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 56,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1526:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1526:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 58,
                          "name": "client",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "1540:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1526:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 55,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1518:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1518:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "1518:29:0"
                },
                {
                  "id": 62,
                  "nodeType": "PlaceholderStatement",
                  "src": "1557:1:0"
                }
              ]
            },
            "id": 64,
            "name": "onlyClient",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1505:2:0"
            },
            "src": "1486:79:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "1612:59:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_Status_$7",
                          "typeString": "enum Freelancer.Status"
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 70,
                            "name": "work",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1630:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Work_$15_storage",
                              "typeString": "struct Freelancer.Work storage ref"
                            }
                          },
                          "id": 71,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14,
                          "src": "1630:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$7",
                            "typeString": "enum Freelancer.Status"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 72,
                          "name": "_status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1645:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$7",
                            "typeString": "enum Freelancer.Status"
                          }
                        },
                        "src": "1630:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1622:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1622:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "1622:31:0"
                },
                {
                  "id": 76,
                  "nodeType": "PlaceholderStatement",
                  "src": "1663:1:0"
                }
              ]
            },
            "id": 78,
            "name": "checkWorkStatus",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_status",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1596:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Status_$7",
                    "typeString": "enum Freelancer.Status"
                  },
                  "typeName": {
                    "id": 66,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 65,
                      "name": "Status",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7,
                      "src": "1596:6:0"
                    },
                    "referencedDeclaration": 7,
                    "src": "1596:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1595:16:0"
            },
            "src": "1571:100:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "1810:55:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 85,
                          "name": "_payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "1828:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 86,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "1840:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1828:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1820:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1820:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1820:27:0"
                },
                {
                  "id": 90,
                  "nodeType": "PlaceholderStatement",
                  "src": "1857:1:0"
                }
              ]
            },
            "id": 92,
            "name": "sufficientFunds",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1776:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1776:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "_payment",
                  "nodeType": "VariableDeclaration",
                  "scope": 92,
                  "src": "1792:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1792:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1775:34:0"
            },
            "src": "1751:114:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1972:131:0",
              "statements": [
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101,
                      "name": "client",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "1982:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 102,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1991:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1991:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1982:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1982:19:0"
                },
                {
                  "expression": {
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 106,
                      "name": "work",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2011:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Work_$15_storage",
                        "typeString": "struct Freelancer.Work storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 108,
                          "name": "_description",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "2023:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 109,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "2037:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 110,
                            "name": "Status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2045:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                              "typeString": "type(enum Freelancer.Status)"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "src": "2045:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Status_$7",
                            "typeString": "enum Freelancer.Status"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_Status_$7",
                            "typeString": "enum Freelancer.Status"
                          }
                        ],
                        "id": 107,
                        "name": "Work",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "2018:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Work_$15_storage_ptr_$",
                          "typeString": "type(struct Freelancer.Work storage pointer)"
                        }
                      },
                      "id": 112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2018:43:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Work_$15_memory_ptr",
                        "typeString": "struct Freelancer.Work memory"
                      }
                    },
                    "src": "2011:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Work_$15_storage",
                      "typeString": "struct Freelancer.Work storage ref"
                    }
                  },
                  "id": 114,
                  "nodeType": "ExpressionStatement",
                  "src": "2011:50:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 116,
                        "name": "client",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "2089:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 115,
                      "name": "workProposed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "2076:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "EmitStatement",
                  "src": "2071:25:0"
                }
              ]
            },
            "functionSelector": "d69c1361",
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 99,
                "modifierName": {
                  "id": 98,
                  "name": "onlyClient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "1957:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1957:10:0"
              }
            ],
            "name": "proposeWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1892:26:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1920:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1920:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1891:41:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1972:0:0"
            },
            "scope": 220,
            "src": "1871:232:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "2215:88:0",
              "statements": [
                {
                  "expression": {
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 129,
                      "name": "freelancer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2225:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 132,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2246:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2246:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2238:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2238:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2238:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2225:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "2225:32:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 138,
                        "name": "freelancer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2285:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 137,
                      "name": "workAccepted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "2272:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2272:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 140,
                  "nodeType": "EmitStatement",
                  "src": "2267:29:0"
                }
              ]
            },
            "functionSelector": "0b832cb2",
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 123,
                "modifierName": {
                  "id": 122,
                  "name": "onlyFreelancer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53,
                  "src": "2155:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2155:14:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 125,
                      "name": "Status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "2194:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                        "typeString": "type(enum Freelancer.Status)"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "proposal",
                    "nodeType": "MemberAccess",
                    "src": "2194:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  }
                ],
                "id": 127,
                "modifierName": {
                  "id": 124,
                  "name": "checkWorkStatus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78,
                  "src": "2178:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2178:32:0"
              }
            ],
            "name": "acceptWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2128:2:0"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2215:0:0"
            },
            "scope": 220,
            "src": "2109:194:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "2472:99:0",
              "statements": [
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 157,
                        "name": "work",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2482:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Work_$15_storage",
                          "typeString": "struct Freelancer.Work storage ref"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "2482:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$7",
                        "typeString": "enum Freelancer.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 160,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2496:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                          "typeString": "type(enum Freelancer.Status)"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "funded",
                      "nodeType": "MemberAccess",
                      "src": "2496:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$7",
                        "typeString": "enum Freelancer.Status"
                      }
                    },
                    "src": "2482:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "2482:27:0"
                },
                {
                  "expression": {
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 164,
                      "name": "escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "2519:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 165,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2528:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2528:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2519:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2519:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 169,
                      "name": "workFunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "2552:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2552:12:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 171,
                  "nodeType": "EmitStatement",
                  "src": "2547:17:0"
                }
              ]
            },
            "functionSelector": "4848fb86",
            "id": 173,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 145,
                      "name": "Status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "2385:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                        "typeString": "type(enum Freelancer.Status)"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "accepted",
                    "nodeType": "MemberAccess",
                    "src": "2385:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  }
                ],
                "id": 147,
                "modifierName": {
                  "id": 144,
                  "name": "checkWorkStatus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78,
                  "src": "2369:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2369:32:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 149,
                      "name": "work",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2426:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Work_$15_storage",
                        "typeString": "struct Freelancer.Work storage ref"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11,
                    "src": "2426:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "expression": {
                      "id": 151,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "2438:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "2438:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 153,
                "modifierName": {
                  "id": 148,
                  "name": "sufficientFunds",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "2410:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2410:38:0"
              },
              {
                "id": 155,
                "modifierName": {
                  "id": 154,
                  "name": "onlyClient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "2457:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2457:10:0"
              }
            ],
            "name": "fundWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2326:2:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2472:0:0"
            },
            "scope": 220,
            "src": "2309:262:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "2677:73:0",
              "statements": [
                {
                  "expression": {
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 182,
                        "name": "work",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2687:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Work_$15_storage",
                          "typeString": "struct Freelancer.Work storage ref"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "2687:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$7",
                        "typeString": "enum Freelancer.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 185,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2701:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                          "typeString": "type(enum Freelancer.Status)"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "started",
                      "nodeType": "MemberAccess",
                      "src": "2701:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$7",
                        "typeString": "enum Freelancer.Status"
                      }
                    },
                    "src": "2687:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "2687:28:0"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 189,
                      "name": "workStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "2730:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2730:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 191,
                  "nodeType": "EmitStatement",
                  "src": "2725:18:0"
                }
              ]
            },
            "functionSelector": "01034979",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 176,
                "modifierName": {
                  "id": 175,
                  "name": "onlyClient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "2622:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2622:10:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 178,
                      "name": "Status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "2658:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                        "typeString": "type(enum Freelancer.Status)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "funded",
                    "nodeType": "MemberAccess",
                    "src": "2658:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  }
                ],
                "id": 180,
                "modifierName": {
                  "id": 177,
                  "name": "checkWorkStatus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78,
                  "src": "2642:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2642:30:0"
              }
            ],
            "name": "startWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2595:2:0"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2677:0:0"
            },
            "scope": 220,
            "src": "2577:173:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "2874:112:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 205,
                        "name": "escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2904:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 202,
                        "name": "freelancer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "2884:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2884:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2884:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2884:27:0"
                },
                {
                  "expression": {
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 208,
                        "name": "work",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2921:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Work_$15_storage",
                          "typeString": "struct Freelancer.Work storage ref"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "2921:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$7",
                        "typeString": "enum Freelancer.Status"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 211,
                        "name": "Status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2935:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                          "typeString": "type(enum Freelancer.Status)"
                        }
                      },
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "approved",
                      "nodeType": "MemberAccess",
                      "src": "2935:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Status_$7",
                        "typeString": "enum Freelancer.Status"
                      }
                    },
                    "src": "2921:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  },
                  "id": 214,
                  "nodeType": "ExpressionStatement",
                  "src": "2921:29:0"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 215,
                      "name": "workApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "2965:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2965:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "EmitStatement",
                  "src": "2960:19:0"
                }
              ]
            },
            "functionSelector": "ddb3a532",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 196,
                      "name": "Status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "2835:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Status_$7_$",
                        "typeString": "type(enum Freelancer.Status)"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "started",
                    "nodeType": "MemberAccess",
                    "src": "2835:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Status_$7",
                      "typeString": "enum Freelancer.Status"
                    }
                  }
                ],
                "id": 198,
                "modifierName": {
                  "id": 195,
                  "name": "checkWorkStatus",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 78,
                  "src": "2819:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2819:31:0"
              },
              {
                "id": 200,
                "modifierName": {
                  "id": 199,
                  "name": "onlyClient",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 64,
                  "src": "2859:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2859:10:0"
              }
            ],
            "name": "approveWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2776:2:0"
            },
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2874:0:0"
            },
            "scope": 220,
            "src": "2756:230:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 221,
        "src": "69:2919:0"
      }
    ],
    "src": "36:2952:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2021-08-24T09:06:40.770Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}